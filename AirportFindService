using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.ServiceModel;
using System.ServiceModel.Web;
using System.Text;
using System.Net;
using System.Runtime.Serialization.Json;
using System.Xml;
using System.Xml.XPath;
using System.IO;

namespace WcfService1
{
    // NOTE: You can use the "Rename" command on the "Refactor" menu to change the class name "Service1" in code, svc and config file together.
    // NOTE: In order to launch WCF Test Client for testing this service, please select Service1.svc or Service1.svc.cs at the Solution Explorer and start debugging.
    public class AirportService : IService1
    {
        static string a;
        public List<string> GetData(string comp, string add)
        {
            string url = "http://maps.googleapis.com/maps/api/geocode/xml?address=" + comp;        //service to take zipcode and extract coordinates
            XmlDocument d1 = MakeRequest(url);            //calling function MakeRequest
            string f = ProcessResponse1(d1);               //
            string UrlRequest = "https://maps.googleapis.com/maps/api/place/nearbysearch/xml?location=" + f + "&radius=50000&types=airport&key=AIzaSyBXYtS6Cf7IMdkhrDXCbeFkuh3dTnfeeAs";       //service to extract stores using coordinates
            XmlDocument d = MakeRequest(UrlRequest);        //MakeRequest function called
            List<string> e = ProcessResponse(d);        //ProcessResponse function called
            return (e);
        }
        public XmlDocument MakeRequest(string requestUrl)  //function makes the request and returns the XML data
        {
            {
                HttpWebRequest request = WebRequest.Create(requestUrl) as HttpWebRequest;
                HttpWebResponse response = request.GetResponse() as HttpWebResponse;
                XmlDocument xmlDoc = new XmlDocument();
                xmlDoc.Load(response.GetResponseStream());
                return (xmlDoc);
            }          
        }
        static public List<string> ProcessResponse(XmlDocument locationsResponse) //function process the XML document
        {
            List<string> a = new List<string>();
            XmlNodeList locationElements = locationsResponse.SelectNodes("PlaceSearchResponse/result"); //Extracts the result from XML document
            foreach (XmlNode result in locationElements)
            {
                a.Add(result.SelectSingleNode("name").InnerText);
                //break;
            }
            return a;
        }
        static public string ProcessResponse1(XmlDocument locationsResponse)
        {
            // string a;
            string b;
            XmlNamespaceManager nsmgr = new XmlNamespaceManager(locationsResponse.NameTable);
            nsmgr.AddNamespace("rest", "http://schemas.microsoft.com/search/local/ws/rest/v1");
            XmlNodeList locationElements = locationsResponse.SelectNodes("GeocodeResponse/result/geometry/location");//Extracts the longitude and lattitude using zipcode
            foreach (XmlNode result in locationElements)
            {
                a = (result.SelectSingleNode("lat").InnerText);  //lattitude
                b = (result.SelectSingleNode("lng").InnerText);  //longitude
                a += ",";
                a += b;
                break;
            }
          return a;
        }
    }
}
